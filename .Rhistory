attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
left_join(students, by = 'pawsId') %>% left_join(sections, by = c('section' = 'sectionId')) %>%
count(att_event, section, eventDate, eventTopic)
head(attTable)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
left_join(students, by = 'pawsId') %>% left_join(sections, by = c('section' = 'sectionId')) %>%
count(att_event, section, eventDate, eventTopic) %>% collect() %>% mutate(eventDate = as.Date(eventDate))
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
left_join(students, by = 'pawsId') %>% left_join(sections, by = c('section' = 'sectionId')) %>%
count(att_event, section, eventDate, eventTopic) %>% collect() %>% as.data.frame() %>%
mutate(eventDate = as.Date(eventDate))
attTable(head)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
left_join(students, by = 'pawsId') %>% left_join(sections, by = c('section' = 'sectionId')) %>%
count(att_event, section, eventDate, eventTopic) %>% collect() %>% as.data.frame() %>%
mutate(eventDate = as.Date(eventDate))
head(attTable)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
left_join(students, by = 'pawsId') %>% left_join(sections, by = c('section' = 'sectionId')) %>%
count(att_event, section, eventDate, eventTopic) %>% collect() %>% as.data.frame() %>%
mutate(eventDate = as.Date(eventDate)) %>% arrange(eventDate)
head(attTable)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
left_join(students, by = 'pawsId') %>% count(att_event, eventDate, eventTopic) %>%
collect() %>% as.data.frame() %>% mutate(eventDate = as.Date(eventDate)) %>% arrange(eventDate)
head(attTable)
str(attTable)
attTable %>% filter(eventTopic == 'lecture') %>% ggplot(aes(x = eventDate, y = n)) +
geom_line()
View(attTable)
head(students)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
collect()
head(attTable)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
collect() %>% left_join(ss, by = 'pawsId')
head(attTable)
filter(attTable, is.na(sectionId))
filter(attTable, is.na(sectionId)) %>% arrange(pawsId)
filter(attTable, is.na(sectionId)) %>% arrange(pawsId) -> missingSection
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
collect() %>% left_join(ss, by = 'pawsId') %>% filter(!is.na(sectionId))
head(attTable)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
collect() %>% left_join(ss, by = 'pawsId') %>% filter(!is.na(sectionId)) %>%
select(sectionId, eventDate, eventTopic)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
collect() %>% left_join(ss, by = 'pawsId') %>% filter(!is.na(sectionId)) %>%
select(sectionId, eventDate, eventTopic) %>% mutate(eventDate = as.Date(eventDate))
head(attTable)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
collect() %>% left_join(ss, by = 'pawsId') %>% filter(!is.na(sectionId)) %>%
count(sectionId, eventDate, eventTopic) %>% mutate(eventDate = as.Date(eventDate))
head(attTable)
attTable %>% ggplot(aes(x = eventDate, y = n)) %>% geom_col(aes(color = eventTopic), position = 'dodge')
str(attTable)
attTable %>% ggplot(aes(x = eventDate, y = n)) + geom_col(aes(color = eventTopic), position = 'dodge')
attTable %>% ggplot(aes(x = eventDate, y = n)) + geom_col(aes(fill = eventTopic), position = 'dodge')
attTable %>% ggplot(aes(x = eventDate, y = n)) + geom_col(aes(fill = eventTopic), position = 'dodge') +
facet_wrap(~sectionId)
syllabusLinks <- activity %>% filter(pagePath == '/schedule' & eventCategory == 'Outbound Link') %>%
left_join(users, by = 'userId') %>% distinct(pawsId, eventLabel) %>% filter(!is.na(pawsId)) %>%
arrange(pawsId) %>% collect()
source('connection.R')
source('constants.R')
activity <- tbl(conDatasource, 'activity')
users <- tbl(conDatasource, 'student_user')
pageTable <- tbl(conDatasource, 'page')
syllabusLinks <- activity %>% filter(pagePath == '/schedule' & eventCategory == 'Outbound Link') %>%
left_join(users, by = 'userId') %>% distinct(pawsId, eventLabel) %>% filter(!is.na(pawsId)) %>%
arrange(pawsId) %>% collect()
View(syllabusLinks)
syllabusLinks %>% count(pawsId)
syllabusLinks %>% count(pawsId) %>% View()
syllabusLinks %>% count(eventLabel) %>% View()
syllabusLinks %>% count(eventLabel) %>% View()
scheduleLinks <- activity %>% filter(pagePath == '/schedule' & eventCategory == 'Outbound Link') %>%
left_join(users, by = 'userId') %>% distinct(pawsId, eventLabel) %>% filter(!is.na(pawsId)) %>%
arrange(pawsId) %>% collect()
remove(syllabusLinks)
View(scheduleLinks)
topicLinks %>% filter(pageCategory == 'is') %>% count(pagePath)
topicLinks %>% filter(pageCategory == 'is') %>% count(eventValue)
topicLinks %>% filter(pageCategory == 'is') %>% count(eventLabel)
topicLinks %>% filter(pageCategory == 'is') %>% count(eventLabel) %>% arrange(desc(n))
topicLinks %>% filter(pageCategory == 'is') %>% filter(topic == 'Software')
topicLinks %>% filter(pageCategory == 'is') %>% filter(topic == 'Software') %>% count(eventLabel)
topicLinks %>% filter(pageCategory == 'is') %>% filter(topic == 'Software') %>% count(eventLabel) %>% View()
head(users)
distinct(users, section)
library(tidyverse)
source('connection.R')
source('constants.R')
# import data
roster <- tbl(conDatasource, 'student_user')
activity <- tbl(conDatasource, 'activity')
library(tidyverse)
source('connection.R')
source('constants.R')
# import data
roster <- tbl(conDatasource, 'student_user')
activity <- tbl(conDatasource, 'activity')
attendance <- tbl(conDatasource, 'attendance')
classes <- tbl(conDatasource, 'attevent')
library(tidyverse)
source('connection.R')
source('constants.R')
# import data
roster <- tbl(conDatasource, 'student_user')
activity <- tbl(conDatasource, 'activity')
attendance <- tbl(conDatasource, 'attendance')
classes <- tbl(conDatasource, 'attevent')
section <- tbl(conDatasource, 'section')
big <- left_join(roster, activity, by='userId')
big <- left_join(roster, activity, by='userId') %>% left_join(section, by=c('section'='sectionId'))
big <- left_join(roster, activity, by='userId') %>% left_join(section, by=c('section'='sectionId')) %>%
left_join(attendance, by='pawsId')
big <- left_join(roster, activity, by='userId') %>% left_join(section, by=c('section'='sectionId')) %>%
left_join(attendance, by='pawsId') %>% left_join(classes, by=c('attevent' = 'eventId'))
big <- left_join(roster, activity, by='userId') %>% left_join(section, by=c('section'='sectionId')) %>%
left_join(attendance, by='pawsId') %>% left_join(classes, by=c('att_event' = 'eventId'))
source('studentBackEnd.R')
library(flexdashboard)
library(flexdashboard)
library(plotly)
library(plotly)
library(shiny)
?selectInput
?shiny::textInput
?reactive
head(big)
big <- big %>% select(pawsID:section, pagePath:eventCategory, eventLabel:delivery, att_event:eventTopic)
head(big)
big <- big %>% select(pawsId:section, pagePath:eventCategory, eventLabel:delivery, att_event:eventTopic)
head(big)
big <- left_join(roster, activity, by='userId') %>% left_join(section, by=c('section'='sectionId')) %>%
left_join(attendance, by='pawsId') %>% left_join(classes, by=c('att_event' = 'eventId'))
head(big)
big <- big %>% select(pawsId:section, pagePath:eventCategory, eventLabel:delivery, att_event:eventTopic)
head(big)
?selectInput
distinct(big, pawsID)
students <- distinct(roster, pawsId) %>% collect()
students
students$pawsId[1]
View(students)
if("aand144" %in% students) {print("Yay")}
if("aand144" %in% students$pawsId) {print("Yay")}
big <- left_join(roster, section, by=c('section'='sectionId')) %>% left_join(attendance, by='pawsId') %>%
left_join(classes, by=c('att_event' = 'eventId'))
head(big)
library(knitr)
?shiny::textOutput
?textOutput
?renderText
library(flexdashboard)
library(flexdashboard)
library(plotly)
library(shiny)
library(plotly)
library(shiny)
source('studentBackEnd.R')
?outputOptions
?textOutput
?renderPrint
head(big)
roster(head)
head(roster)
nameList <- distinct(roster, lastname, firstname) %>% collect()
head(nameList)
nameList <- c()
for (row in 1:nrow(nameTable)) {
nameList[row] <- paste0(nameTable[row, 'lastname'], ', ', nameTable[row, 'firstname'])
}
nameTable <- distinct(roster, lastname, firstname) %>% collect()
nameList <- c()
for (row in 1:nrow(nameTable)) {
nameList[row] <- paste0(nameTable[row, 'lastname'], ', ', nameTable[row, 'firstname'])
}
nameList
?radioButtons
nameTable <- distinct(roster, pawsId, lastname, firstname) %>% collect()
head(nameTable)
nameTable <- distinct(roster, pawsId, lastname, firstname) %>% collect()
nameList <- c()
for (row in 1:nrow(nameTable)) {
index <- nameTable[row, "pawsId"]
nameList[index] <- paste0(nameTable[row, 'lastname'], ', ', nameTable[row, 'firstname'])
}
nameTable[1, "pawsId"]
str(nameTable[1, "pawsId"])
as.character(nameTable[1, "pawsId"])
for (row in 1:nrow(nameTable)) {
index <- as.character(nameTable[row, "pawsId"])
nameList[index] <- paste0(nameTable[row, 'lastname'], ', ', nameTable[row, 'firstname'])
}
nameList
nameList <- c()
for (row in 1:nrow(nameTable)) {
index <- paste0(nameTable[row, 'lastname'], ', ', nameTable[row, 'firstname'])
nameList[index] <- as.character(nameTable[row, "pawsId"])
}
nameList
head(big)
filter(big, pawsId == "aberr19")
nameList
filter(big, pawsId == "abelle8")
library(flexdashboard)
library(flexdashboard)
library(plotly)
library(shiny)
source('studentBackEnd.R')
head(class)
head(attendance)
attendance %>% mutate(new = substr(att_event, 12, 13))
attendance %>% mutate(new = substr(att_event, 13, 14))
attendance %>% mutate(new = substr(att_event, 5, 6))
head(student)
head(roster)
head(nameTable)
head(class)
head(attendance)
head(classes)
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
right_join(roster, by = c('sectionId' = 'section')) %>% left_join(attendance, by = 'pawsId') %>%
left_join(classes, by = c('eventId' = 'att_event')) %>% collect()
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
right_join(roster, by = c('sectionId' = 'section')) %>% left_join(attendance, by = 'pawsId') %>%
left_join(classes, by = c('att_event' = 'eventId')) %>% collect()
head(big)
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
right_join(roster, by = c('sectionId' = 'section')) %>% left_join(attendance, by = 'pawsId') %>%
left_join(classes, by = c('att_event' = 'eventId')) %>% collect() %>%
mutate(year = substr(att_event, 1, 4)) %>% mutate(semester = substr(att_event, 5, 6)) %>%
mutate(class = substr(13, 14)) %>% select(-att_event)
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
right_join(roster, by = c('sectionId' = 'section')) %>% left_join(attendance, by = 'pawsId') %>%
left_join(classes, by = c('att_event' = 'eventId')) %>% collect() %>%
mutate(year = substr(att_event, 1, 4)) %>% mutate(semester = substr(att_event, 5, 6)) %>%
mutate(class = substr(att_event, 13, 14)) %>% select(-att_event)
head(big)
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
right_join(roster, by = c('sectionId' = 'section')) %>% left_join(attendance, by = 'pawsId') %>%
left_join(classes, by = c('att_event' = 'eventId')) %>% collect() %>%
mutate(semester = substr(att_event, 5, 6)) %>% mutate(class = substr(att_event, 13, 14)) %>%
select(-att_event) %>% mutate(eventDate = as.Date(eventDate))
head(big)
head(classes)
course <- classes %>% collect() %>% mutate(semester = substr(eventId, 5, 6)) %>%
mutate(class = substr(eventId, 13, 14)) %>% mutate(section = substr(eventId, 1, 4))
head(course)
course <- classes %>% collect() %>% mutate(semester = substr(eventId, 5, 6)) %>%
mutate(class = substr(eventId, 13, 14)) %>% mutate(section = substr(eventId, 7, 7))
head(course)
course <- classes %>% collect() %>% mutate(semester = substr(eventId, 5, 6)) %>%
mutate(class = substr(eventId, 13, 14)) %>% mutate(section = substr(eventId, 7, 7)) %>%
mutate(year = substr(eventId, 1, 4)) %>% group_by(section, semester, year, eventTopic) %>%
summarise(classes = n())
head(course)
course
head(big)
course <- classes %>% collect() %>% mutate(semester = substr(eventId, 5, 6)) %>%
mutate(class = substr(eventId, 13, 14)) %>% mutate(sectionId = substr(eventId, 1, 7)) %>%
mutate(year = substr(eventId, 1, 4)) %>% group_by(section, semester, year, eventTopic) %>%
summarise(classes = n())
course
course <- classes %>% collect() %>% mutate(semester = substr(eventId, 5, 6)) %>%
mutate(class = substr(eventId, 13, 14)) %>% mutate(sectionId = substr(eventId, 1, 7)) %>%
mutate(year = substr(eventId, 1, 4)) %>% group_by(sectionId, semester, year, eventTopic) %>%
summarise(classes = n())
course
course <- classes %>% collect() %>% mutate(sectionId = substr(eventId, 1, 7)) %>%
group_by(sectionId, eventTopic) %>% summarise(classes = n())
course
big
course
head(attendance)
source('connection.R')
head(attendance)
# import data
roster <- tbl(conDatasource, 'student_user')
activity <- tbl(conDatasource, 'activity')
attendance <- tbl(conDatasource, 'attendance')
classes <- tbl(conDatasource, 'attevent')
section <- tbl(conDatasource, 'section')
head(attendance)
head(classes)
attend <- attendance %>% left_join(roster, by = 'pawsId')
head(attend)
head(classes)
head(attend)
head(attendance)
head(classes)
attend <- attendance %>% left_join(classes, by = c('att_event' = 'eventId'))
head(attend)
attend <- attendance %>% left_join(classes, by = c('att_event' = 'eventId')) %>%
group_by(pawsId, eventTopic) %>% summarise(attendance = n())
head(attend)
head(big)
head(attend)
head(course)
head(big)
head(attend)
head(course)
head(big)
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
right_join(roster, by = c('sectionId' = 'section')) %>% left_join(attend, by = 'pawsId') %>%
left_join(course, by = 'sectionId') %>% collect() %>% mutate(eventDate = as.Date(eventDate))
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
right_join(roster, by = c('sectionId' = 'section')) %>% collect() %>%
left_join(attend, by = 'pawsId') %>% left_join(course, by = 'sectionId') %>%
mutate(eventDate = as.Date(eventDate))
course <- classes %>% collect() %>% mutate(sectionId = substr(eventId, 1, 7)) %>%
group_by(sectionId, eventTopic) %>% summarise(classes = n())
attend <- attendance %>% left_join(classes, by = c('att_event' = 'eventId')) %>% collect() %>%
group_by(pawsId, eventTopic) %>% summarise(attendance = n())
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
right_join(roster, by = c('sectionId' = 'section')) %>% collect() %>%
left_join(attend, by = 'pawsId') %>% left_join(course, by = 'sectionId') %>%
mutate(eventDate = as.Date(eventDate))
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
right_join(roster, by = c('sectionId' = 'section')) %>% collect() %>%
left_join(attend, by = 'pawsId') %>% left_join(course, by = 'sectionId')
head(big)
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
right_join(roster, by = c('sectionId' = 'section')) %>% collect() %>%
left_join(attend, by = 'pawsId') %>% left_join(course, by = c('sectionId', 'eventTopic'))
head(big)
attend <- attendance %>% left_join(classes, by = c('att_event' = 'eventId')) %>% collect() %>%
group_by(pawsId, eventTopic) %>% summarise(att = n())
course <- classes %>% collect() %>% mutate(sectionId = substr(eventId, 1, 7)) %>%
group_by(sectionId, eventTopic) %>% summarise(classTotal = n())
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
right_join(roster, by = c('sectionId' = 'section')) %>% collect() %>%
left_join(attend, by = 'pawsId') %>% left_join(course, by = c('sectionId', 'eventTopic')) %>%
mutate(attPerc = att / classTotal)
head(big)
?renderValueBox
big %>% filter(aaust25)
big %>% filter(pawsId == 'aaust25')
big %>% filter(pawsId == 'aaust25') -> x
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
right_join(roster, by = c('sectionId' = 'section')) %>% collect() %>%
left_join(attend, by = 'pawsId') %>% left_join(course, by = c('sectionId', 'eventTopic')) %>%
mutate(attPerc = att / classTotal) %>% mutate(missed = classTotal - att)
head(big)
x
big %>% filter(pawsId == 'aaust25') -> x
x
x$missed[1]
x$missed[2]
View(big)
x %>% filter(eventTopic == 'lecture') %>% select(missed)
as.Character(x %>% filter(eventTopic == 'lecture') %>% select(missed))
as.character(x %>% filter(eventTopic == 'lecture') %>% select(missed))
head(big)
head(attend)
head(course)
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
right_join(roster, by = c('sectionId' = 'section')) %>% collect() %>%
left_join(attend, by = 'pawsId') %>% right_join(course, by = c('sectionId', 'eventTopic')) %>%
mutate(attPerc = att / classTotal) %>% mutate(missed = classTotal - att)
head(big)
View(big %>% arrange(pawsId))
?as.double
?renderValueBox
?valueBox
?renderValueBox
?valueBoxOutput
?valueBox
View(big)
head(section)
head(classes)
course
?right_join
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
right_join(roster, by = c('sectionId' = 'section')) %>% collect() %>%
left_join(attend, by = 'pawsId') #%>% right_join(course, by = c('sectionId', 'eventTopic')) %>%
head(big)
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
right_join(roster, by = c('sectionId' = 'section')) %>% collect() %>%
left_join(attend, by = 'pawsId') %>% right_join(course, by = c('sectionId')) %>%
mutate(attPerc = att / classTotal) %>% mutate(missed = classTotal - att)
head(big)
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
right_join(roster, by = c('sectionId' = 'section')) %>% collect() %>%
left_join(attend, by = 'pawsId') %>% right_join(course, by = c('sectionId')) %>%
mutate(att = case_when(
eventTopic.x != eventTopic.y ~ 0
TRUE ~ att
)) %>% mutate(attPerc = att / classTotal) %>% mutate(missed = classTotal - att)
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
right_join(roster, by = c('sectionId' = 'section')) %>% collect() %>%
left_join(attend, by = 'pawsId') %>% right_join(course, by = c('sectionId')) %>%
mutate(att = case_when(
eventTopic.x != eventTopic.y ~ 0,
TRUE ~ att
)) %>% mutate(attPerc = att / classTotal) %>% mutate(missed = classTotal - att)
typeof(0)
typeof(1)
typeof(as.integer(0))
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
right_join(roster, by = c('sectionId' = 'section')) %>% collect() %>%
left_join(attend, by = 'pawsId') %>% right_join(course, by = c('sectionId')) %>%
mutate(att = case_when(
eventTopic.x != eventTopic.y ~ as.integer(0),
TRUE ~ att
)) %>% mutate(attPerc = att / classTotal) %>% mutate(missed = classTotal - att)
?right_join
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
right_join(roster, by = c('sectionId' = 'section')) %>% collect() %>%
left_join(attend, by = 'pawsId') %>% full_join(course, by = c('sectionId', 'eventTopic')) %>%
mutate(attPerc = att / classTotal) %>% mutate(missed = classTotal - att)
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
left_join(roster, by = c('sectionId' = 'section')) %>% collect() %>%
left_join(attend, by = 'pawsId') %>% full_join(course, by = c('sectionId', 'eventTopic')) %>%
mutate(attPerc = att / classTotal) %>% mutate(missed = classTotal - att)
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
left_join(roster, by = c('sectionId' = 'section')) %>% collect() %>%
left_join(attend, by = 'pawsId') %>% left_join(course, by = c('sectionId', 'eventTopic')) %>%
mutate(attPerc = att / classTotal) %>% mutate(missed = classTotal - att)
big %>% filter(pawsId == 'bbares2') %>% filter(eventTopic == 'lecture') %>% select(missed)
as.character(big %>% filter(pawsId == 'bbares2') %>% filter(eventTopic == 'lecture') %>% select(missed))
?renderValueBox
?valueBox
library(tidyverse)
source('connection.R')
source('constants.R')
# import data
roster <- tbl(conDatasource, 'student_user')
activity <- tbl(conDatasource, 'activity')
attendance <- tbl(conDatasource, 'attendance')
classes <- tbl(conDatasource, 'attevent')
section <- tbl(conDatasource, 'section')
nameTable <- left_join(roster, section, by = c('section' = 'sectionId')) %>%
filter(delivery == "inclass") %>% distinct(pawsId, lastname, firstname) %>% arrange(lastname) %>%
collect()
nameList <- c()
for (row in 1:nrow(nameTable)) {
index <- paste0(nameTable[row, 'lastname'], ', ', nameTable[row, 'firstname'])
nameList[index] <- as.character(nameTable[row, "pawsId"])
}
course <- classes %>% collect() %>% mutate(sectionId = substr(eventId, 1, 7)) %>%
group_by(sectionId, eventTopic) %>% summarise(classTotal = n())
attend <- attendance %>% left_join(classes, by = c('att_event' = 'eventId')) %>% collect() %>%
group_by(pawsId, eventTopic) %>% summarise(att = n())
big <- section %>% filter(delivery == "inclass") %>% select(sectionId, instructor) %>%
left_join(roster, by = c('sectionId' = 'section')) %>% collect() %>%
left_join(attend, by = 'pawsId') %>% left_join(course, by = c('sectionId', 'eventTopic')) %>%
mutate(attPerc = att / classTotal) %>% mutate(missed = classTotal - att)
View(big)
chunk <- tbl(conDatasource, 'exchunk')
submission <- tbl(conDatasource, 'exsubmission')
subs <- left_join(submission, chunk, by = c('label' = 'chunkId'))
head(subs)
subs <- submission %>% filter(pawsId != "") %>% left_join(chunk, by = c('label' = 'chunkId'))
head(subs)
subs <- submission %>% filter(pawsId != "") %>% left_join(chunk, by = c('label' = 'chunkId')) %>%
group_by(pawsId, label, mainTopic, subTopic) %>% summarise(submissions = n(), bestScore = max(totalscore))
head(subs)
subs <- submission %>% filter(pawsId != "") %>% left_join(chunk, by = c('label' = 'chunkId')) %>%
collect() %>% group_by(pawsId, label, mainTopic, subTopic) %>%
summarise(submissions = n(), bestScore = max(totalscore))
view(subs)
View(subs)
assignments <- chunk %>% collect()
head(chunk)
View(subs)
test <- subs %>% filter(pawsId == "aferro5") %>% select(pawsId, label)
test
str(subs)
subs <- submission %>% filter(pawsId != "") %>% left_join(chunk, by = c('label' = 'chunkId')) %>%
group_by(pawsId, label, mainTopic, subTopic) %>%
summarise(submissions = n(), bestScore = max(totalscore)) %>% as.data.frame()
subs <- submission %>% filter(pawsId != "") %>% left_join(chunk, by = c('label' = 'chunkId')) %>%
group_by(pawsId, label, mainTopic, subTopic) %>%
summarise(submissions = n(), bestScore = max(totalscore)) %>% collect() %>% as.data.frame()
submission %>% filter(is.na(totalscore))
subs <- submission %>% filter(pawsId != "") %>% left_join(chunk, by = c('label' = 'chunkId')) %>%
group_by(pawsId, label, mainTopic, subTopic) %>%
summarise(submissions = n(), bestScore = max(totalscore, na.rm = TRUE)) %>% collect() %>%
as.data.frame()
str(subs)
test <- subs %>% filter(pawsId == "aferro5") %>% select(pawsId, label)
test
filter(assignments, !(chunkId %in% test$label))
test <- subs %>% filter(pawsId == "adav236") %>% select(pawsId, label)
filter(assignments, !(chunkId %in% test$label))
test
test <- subs %>% filter(pawsId == "aand144") %>% select(pawsId, label)
filter(assignments, !(chunkId %in% test$label))
filter(assignments, !(chunkId %in% test$label))
head(submissions)
head(submission)
submission %>% arrange(desc(subTime)) %>% head()
View(big)
head(attend)
head(course)
course
cwd()
getwd()
