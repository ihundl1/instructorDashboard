gaQuery <- QueryBuilder(queryList)
gaData <- GetReportData(gaQuery, token)
invisible(GetProfiles(token))
gaData <- GetReportData(gaQuery, token)
me <- "5baeab5103afb63cc097b029"
x <- filter(gaData, dimension7 == me & eventCategory == "Page Visibility") %>% select(dimension4, pagePath, eventValue) %>%
mutate(minutes = eventValue / 60) %>% arrange(pagePath) %>% select(-dimension4)
x <- filter(gaData, dimension7 == me & eventCategory == "Page Visibility") %>% select(dimension4, pagePath, eventValue) %>%
mutate(minutes = eventValue / 60) %>% arrange(pagePath) %>% select(-dimension4)
x
queryList <- Init(start.date = "2018-11-08",
end.date = "2018-11-08",
dimensions = "ga:dimension4,ga:dimension7,ga:pagePath,ga:eventCategory,ga:eventLabel,ga:date",
metrics = "ga:eventValue",
table.id = "ga:157074007",
max.results = 10000
)
gaQuery <- QueryBuilder(queryList)
gaData <- GetReportData(gaQuery, token)
me <- "5baeab5103afb63cc097b029"
filter(gaData, dimension7 == me & eventCategory == "Page Visibility") %>% select(dimension4, pagePath, eventValue) %>%
mutate(minutes = eventValue / 60) %>% arrange(pagePath) %>% select(-dimension4)
queryList <- Init(start.date = "2018-11-06",
end.date = "2018-11-06",
dimensions = "ga:dimension4,ga:dimension7,ga:pagePath,ga:eventCategory,ga:eventLabel,ga:date",
metrics = "ga:eventValue",
table.id = "ga:157074007",
max.results = 10000
)
gaQuery <- QueryBuilder(queryList)
gaData <- GetReportData(gaQuery, token)
me <- "5baeab5103afb63cc097b029"
filter(gaData, dimension7 == me & eventCategory == "Page Visibility") %>% select(dimension4, pagePath, eventValue) %>%
mutate(minutes = eventValue / 60) %>% arrange(pagePath) %>% select(-dimension4)
queryList <- Init(start.date = "2018-11-08",
end.date = "2018-11-08",
dimensions = "ga:dimension4,ga:dimension7,ga:pagePath,ga:eventCategory,ga:eventLabel,ga:date",
metrics = "ga:eventValue",
table.id = "ga:157074007",
max.results = 10000
)
gaQuery <- QueryBuilder(queryList)
gaData <- GetReportData(gaQuery, token)
me <- "5baeab5103afb63cc097b029"
filter(gaData, dimension7 == me & eventCategory == "Page Visibility") %>% select(dimension4, pagePath, eventValue) %>%
mutate(minutes = eventValue / 60) %>% arrange(pagePath) %>% select(-dimension4)
gaData <- GetReportData(gaQuery, token)
me <- "5baeab5103afb63cc097b029"
filter(gaData, dimension7 == me & eventCategory == "Page Visibility") %>% select(dimension4, pagePath, eventValue) %>%
mutate(minutes = eventValue / 60) %>% arrange(pagePath) %>% select(-dimension4)
View(topicLinks)
View(syllabusLinks)
library(tidyverse)
source('backEnd.R')
source('backEnd.R')
source('links.R')
knitr::opts_chunk$set(echo = FALSE, message = FALSE)
distinct(syllabusLinks, pawsId)
as.vector(syllabusLinks, pawsId)
as.vector(distinct(syllabusLinks, pawsId))
kable(distinct(syllabusLinks, pawsId))
library(knitr)
kable(distinct(syllabusLinks, pawsId))
kable(syllabusLinks)
View(topicLinks)
activity <- tbl(conDatasource, 'activity')
users <- tbl(conDatasource, 'student_user')
pageTable <- tbl(conDatasource, 'page')
topicLinks <- activity %>% filter(eventCategory == 'Outbound Link') %>% left_join(users, by = 'userId') %>%
select(pawsId, pagePath, eventLabel, date) %>% filter(!is.na(pawsId)) %>%
left_join(pageTable, by = 'pagePath') %>% filter(pageCategory != 'main' & pageCategory != 'null') %>%
group_by(pageCategory, pagePath, date) %>% summarise(clicks = n()) %>% collect() %>% mutate(date = as.Date(date))
## TOPICS!## TOPICS!
# Information Systems
isTopics <- c("Home", "Introduction", "Cybersecurity", "Hardware", "Software", "Networking",
"IS Foundations", "Value Creation", "Business Models")
isAssign <- function(is) {
is %>% mutate(topic = case_when(
grepl('intro', pagePath) ~ isTopics[2],
grepl('cyber', pagePath) ~ isTopics[3],
grepl('hard', pagePath) ~ isTopics[4],
grepl('soft', pagePath) ~ isTopics[5],
grepl('net', pagePath) ~ isTopics[6],
grepl('info', pagePath) ~ isTopics[7],
grepl('val', pagePath) ~ isTopics[8],
grepl('ecom', pagePath) ~ isTopics[9],
TRUE ~ isTopics[1]
))
}
# Excel
excelTopics <- c("Home", "Formatting", "Functions", "Worksheet Mgt", "Sort & Filter",
"Pivot Tables", "Comprehensive Analysis")
excelAssign <- function(excel) {
excel %>% mutate(topic = case_when(
grepl('analysis', pagePath) ~ excelTopics[7],
grepl('pivot', pagePath) ~ excelTopics[6],
grepl('sort', pagePath) ~ excelTopics[5],
grepl('management', pagePath)~ excelTopics[4],
grepl('functions', pagePath) ~ excelTopics[3],
grepl('format', pagePath) ~ excelTopics[2],
TRUE ~ excelTopics[1]
)) %>% mutate(subtopic = case_when(
grepl('concepts', pagePath) ~ "Concepts",
grepl('practice', pagePath) ~ "Practice",
TRUE ~ "Other"
))
}
# Word
wordTopics <- c("Home", "Simple Document", "Template", "Complex Document")
wordAssign <- function(word) {
word %>% mutate(topic = case_when(
grepl('simple', pagePath) ~ wordTopics[2],
grepl('template', pagePath) ~ wordTopics[3],
grepl('complex', pagePath) ~ wordTopics[4],
TRUE ~ wordTopics[1]
)) %>% mutate(subtopic = case_when(
grepl('concepts', pagePath) ~ "Concepts",
grepl('practice', pagePath) ~ "Practice",
TRUE ~ "Other"
))
}
## TOPICS!
# Information Systems
is <- is %>% isAssign()
# packages
library(RColorBrewer)
# data source
source('connection.R')
source('constants.R')
# import tables from database
activity <- tbl(conDatasource, 'activity')
pageTable <- tbl(conDatasource, 'page')
roster <- tbl(conDatasource, 'student_user')
# join tables
activity <- left_join(activity, pageTable, by = 'pagePath')
# create study table
study <- activity %>% select(instances, userId, pagePath, eventCategory, eventValue:pageCategory) %>%
filter(date >= currentSemester)
study <- left_join(study, roster, by = 'userId')
study <- study %>% select(-lastname, -firstname) %>% filter(eventCategory == "Page Visibility") %>%
collect() %>% mutate(date = as.Date(date)) %>%
group_by(pawsId, pagePath, pageCategory, eventCategory, date, section) %>% summarize(eventValue = sum(eventValue)) %>%
mutate(visMinutes = eventValue / 60)
study <- as.data.frame(study)
# split study table
studyTopics <- split(study, study$pageCategory)
excel <- studyTopics$excel
word <- studyTopics$word
is <- studyTopics$is
## TOPICS!
# Information Systems
is <- is %>% isAssign()
# Excel
excel <- excelAssign(excel)
View(excel)
# Word
word <- wordAssign(word)
source('constants.R')
View(word)
distinct(topicLinks, pageCategory)
distinct(pageTable, pageCategory)
pageTable %>% filter(pageCategory == 'main')
assignTopic <- function(df) {
df %>% mutate(topic = case_when(
pageCategory == 'is' ~ case_when(
grepl('intro', pagePath) ~ isTopics[2],
grepl('cyber', pagePath) ~ isTopics[3],
grepl('hard', pagePath) ~ isTopics[4],
grepl('soft', pagePath) ~ isTopics[5],
grepl('net', pagePath) ~ isTopics[6],
grepl('info', pagePath) ~ isTopics[7],
grepl('val', pagePath) ~ isTopics[8],
grepl('ecom', pagePath) ~ isTopics[9],
TRUE ~ isTopics[1]
),
pageCategory == 'excel' ~ case_when(
grepl('analysis', pagePath) ~ excelTopics[7],
grepl('pivot', pagePath) ~ excelTopics[6],
grepl('sort', pagePath) ~ excelTopics[5],
grepl('management', pagePath)~ excelTopics[4],
grepl('functions', pagePath) ~ excelTopics[3],
grepl('format', pagePath) ~ excelTopics[2],
TRUE ~ excelTopics[1]
),
pageCategory == 'word' ~ case_when(
grepl('simple', pagePath) ~ wordTopics[2],
grepl('template', pagePath) ~ wordTopics[3],
grepl('complex', pagePath) ~ wordTopics[4],
TRUE ~ wordTopics[1]
),
TRUE ~ 'other'
)) %>% mutate(subtopic = case_when(
grepl('concepts', pagePath) ~ "Concepts",
grepl('practice', pagePath) ~ "Practice",
TRUE ~ "Other"
))
}
assignTopic(topicLinks)
excel <- studyTopics$excel
word <- studyTopics$word
is <- studyTopics$is
excel <- assignTopic(excel)
View(excel)
library(tidyverse)
source('connection.R')
source('constants.R')
activity <- tbl(conDatasource, 'activity')
users <- tbl(conDatasource, 'student_user')
pageTable <- tbl(conDatasource, 'page')
tLinks <- activity %>% filter(eventCategory == 'Outbound Link') %>% left_join(users, by = 'userId')
View(tLinks)
head(tLinks)
tLinks <- activity %>% filter(eventCategory == 'Outbound Link') %>% left_join(users, by = 'userId') %>%
group_by(pagePath, eventLabel, date) %>% summarise(clicks = n()) %>% filter(!is.na(pagePath))
head(tLinks)
tLinks <- activity %>% filter(eventCategory == 'Outbound Link') %>% left_join(users, by = 'userId') %>%
group_by(pagePath, eventLabel, date) %>% summarise(clicks = n()) %>%
left_join(pageTable, by = 'pagePath') %>% filter(pageCategory != 'main' & pageCategory != 'null')
source('~/DDSLab/InstructorDashboard/links.R', echo=TRUE)
head(tLinks)
tLinks
tLinks <- activity %>% filter(eventCategory == 'Outbound Link') %>% left_join(users, by = 'userId') %>%
group_by(pagePath, eventLabel, date) %>% summarise(clicks = n()) %>%
left_join(pageTable, by = 'pagePath') %>% filter(pageCategory != 'main' & pageCategory != 'null') %>%
collect() %>% assignTopic()
topicLinks <- activity %>% filter(eventCategory == 'Outbound Link') %>% left_join(users, by = 'userId') %>%
group_by(pagePath, eventLabel, date) %>% summarise(clicks = n()) %>%
left_join(pageTable, by = 'pagePath') %>% filter(pageCategory != 'main' & pageCategory != 'null') %>%
collect() %>% assignTopic()
remove(tLinks)
View(topicLinks)
View(topicLinks)
topicLinks <- activity %>% filter(eventCategory == 'Outbound Link') %>% left_join(users, by = 'userId') %>%
group_by(pagePath, eventLabel, date) %>% summarise(clicks = n()) %>%
left_join(pageTable, by = 'pagePath') %>% filter(pageCategory != 'main' & pageCategory != 'null') %>%
collect() %>% assignTopic() %>% mutate(date = as.Date(date))
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line()
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) #%>%
topicLinks <- activity %>% filter(eventCategory == 'Outbound Link') %>% left_join(users, by = 'userId') %>%
group_by(pagePath, eventLabel, date) %>% summarise(clicks = n()) %>%
left_join(pageTable, by = 'pagePath') %>% filter(pageCategory != 'main' & pageCategory != 'null') %>%
collect() %>% assignTopic() %>% mutate(date = as.Date(date))
str(topicLinks)
topicLinks <- as.data.frame(topicLinks)
str(topicLinks)
topicLinks <- activity %>% filter(eventCategory == 'Outbound Link') %>% left_join(users, by = 'userId') %>%
group_by(pagePath, eventLabel, date) %>% summarise(clicks = n()) %>%
left_join(pageTable, by = 'pagePath') %>% filter(pageCategory != 'main' & pageCategory != 'null') %>%
collect() %>% assignTopic() %>% as.data.frame() %>% mutate(date = as.Date(date))
str(topicLinks)
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) #%>%
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line()
?ggplot
?geom_line
?scale_fill_continuous
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line() + scale_fill_continuous(na.value 0)
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line() + scale_fill_continuous(na.value = 0)
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line() + geom_point()
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_point()
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_smooth()
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line()
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line() + theme_minimal()
?theme
?element_line
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line() + theme_minimal() +
theme(line = element_line(size=2))
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line(aes(size=2)) +
theme_minimal()
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line(size=2) +
theme_minimal()
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line(size=1) +
theme_minimal()
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line() +
theme_minimal()
?geom_line
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line(size=.5) +
theme_minimal()
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line(size=.75) +
theme_minimal()
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line(size=.6) +
theme_minimal()
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line(size=.7) +
theme_minimal()
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line(size=.75) +
theme_minimal()
?element_line
?theme
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line()
topicLinks %>% filter(pageCategory == 'is') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line() + theme_minimal()
topicLinks %>% filter(pageCategory == 'word') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line() + theme_minimal() +
ggtitle('Word', subtitle = 'Outbound Link Clicks by Date & Topic')
topicLinks %>% filter(pageCategory == 'excel') %>% group_by(date, topic) %>%
summarise(clicks = sum(clicks)) %>%
ggplot(aes(x = date, y = clicks, color = topic)) + geom_line() + theme_minimal() +
ggtitle('Excel', subtitle = 'Outbound Link Clicks by Date & Topic')
attendance <- tbl(conDatasource, 'attendance')
classes <- tbl(conDatasource, 'attevent')
head(attendance)
# Who is attending class?
left_join(attendance, classes, by = 'att_event')
head(classes)
# Who is attending class?
left_join(attendance, classes, by = c('att_event' = 'eventId'))
# Who is attending class?
right_join(attendance, classes, by = c('att_event' = 'eventId'))
# Who is attending class?
left_join(attendance, classes, by = c('eventId' = 'att_event'))
# Who is attending class?
right_join(attendance, classes, by = c('eventId' = 'att_event'))
# Who is attending class?
left_join(attendance, classes, by = c('att_event' = 'eventId')) %>% count(att_event, eventDate, eventTopic)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
count(att_event, eventDate, eventTopic)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
count(att_event, eventDate, eventTopic) %>% collect()
ss
# data source
source('connection.R')
source('constants.R')
# import data from database
exercises <- tbl(conDatasource, 'exsubmission')
eDetails <- tbl(conDatasource, 'exchunk')
students <- tbl(conDatasource, 'student_user')
sections <- tbl(conDatasource, 'section')
attendance <- tbl(conDatasource, 'attendance')
classes <- tbl(conDatasource, 'attevent')
# filter data from previous semesters
exercises <- exercises %>% filter(subTime > currentSemester)
# join tables
ss <- left_join(sections, students, by = c('sectionId'='section')) %>% filter(delivery == 'inclass') %>%
select(sectionId, pawsId)
full <- right_join(ss, exercises, by = 'pawsId') %>% left_join(eDetails, by = c('label'='chunkId')) %>%
select(-filename) %>% collect() %>% mutate(subTime = as_datetime(subTime)) %>%
mutate(subDate = date(subTime))
ss <- collect(ss)
head(ss)
head(sections)
left_join(attendance, ss, by = 'pawsId')
head(students)
head(sections)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
left_join(students, by = 'pawsId') %>% left_join(sections, by = c('section' = 'sectionId')) %>%
count(section, eventDate, eventTopic) %>% collect()
head(attTable)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
left_join(students, by = 'pawsId') %>% left_join(sections, by = c('section' = 'sectionId'))
head(attTable)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
left_join(students, by = 'pawsId') %>% left_join(sections, by = c('section' = 'sectionId')) %>%
count(section, eventDate, eventTopic)
head(attTable)
left_join(attendance, classes, by = c('att_event' = 'eventId'))
left_join(attendance, classes, by = c('att_event' = 'eventId')) %>% count(att_event, eventDate)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
left_join(students, by = 'pawsId') %>% left_join(sections, by = c('section' = 'sectionId')) %>%
count(att_event, section, eventDate, eventTopic)
head(attTable)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
left_join(students, by = 'pawsId') %>% left_join(sections, by = c('section' = 'sectionId')) %>%
count(att_event, section, eventDate, eventTopic) %>% collect() %>% mutate(eventDate = as.Date(eventDate))
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
left_join(students, by = 'pawsId') %>% left_join(sections, by = c('section' = 'sectionId')) %>%
count(att_event, section, eventDate, eventTopic) %>% collect() %>% as.data.frame() %>%
mutate(eventDate = as.Date(eventDate))
attTable(head)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
left_join(students, by = 'pawsId') %>% left_join(sections, by = c('section' = 'sectionId')) %>%
count(att_event, section, eventDate, eventTopic) %>% collect() %>% as.data.frame() %>%
mutate(eventDate = as.Date(eventDate))
head(attTable)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
left_join(students, by = 'pawsId') %>% left_join(sections, by = c('section' = 'sectionId')) %>%
count(att_event, section, eventDate, eventTopic) %>% collect() %>% as.data.frame() %>%
mutate(eventDate = as.Date(eventDate)) %>% arrange(eventDate)
head(attTable)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
left_join(students, by = 'pawsId') %>% count(att_event, eventDate, eventTopic) %>%
collect() %>% as.data.frame() %>% mutate(eventDate = as.Date(eventDate)) %>% arrange(eventDate)
head(attTable)
str(attTable)
attTable %>% filter(eventTopic == 'lecture') %>% ggplot(aes(x = eventDate, y = n)) +
geom_line()
View(attTable)
head(students)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
collect()
head(attTable)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
collect() %>% left_join(ss, by = 'pawsId')
head(attTable)
filter(attTable, is.na(sectionId))
filter(attTable, is.na(sectionId)) %>% arrange(pawsId)
filter(attTable, is.na(sectionId)) %>% arrange(pawsId) -> missingSection
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
collect() %>% left_join(ss, by = 'pawsId') %>% filter(!is.na(sectionId))
head(attTable)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
collect() %>% left_join(ss, by = 'pawsId') %>% filter(!is.na(sectionId)) %>%
select(sectionId, eventDate, eventTopic)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
collect() %>% left_join(ss, by = 'pawsId') %>% filter(!is.na(sectionId)) %>%
select(sectionId, eventDate, eventTopic) %>% mutate(eventDate = as.Date(eventDate))
head(attTable)
# Who is attending class?
attTable <- left_join(attendance, classes, by = c('att_event' = 'eventId')) %>%
collect() %>% left_join(ss, by = 'pawsId') %>% filter(!is.na(sectionId)) %>%
count(sectionId, eventDate, eventTopic) %>% mutate(eventDate = as.Date(eventDate))
head(attTable)
attTable %>% ggplot(aes(x = eventDate, y = n)) %>% geom_col(aes(color = eventTopic), position = 'dodge')
str(attTable)
attTable %>% ggplot(aes(x = eventDate, y = n)) + geom_col(aes(color = eventTopic), position = 'dodge')
attTable %>% ggplot(aes(x = eventDate, y = n)) + geom_col(aes(fill = eventTopic), position = 'dodge')
attTable %>% ggplot(aes(x = eventDate, y = n)) + geom_col(aes(fill = eventTopic), position = 'dodge') +
facet_wrap(~sectionId)
syllabusLinks <- activity %>% filter(pagePath == '/schedule' & eventCategory == 'Outbound Link') %>%
left_join(users, by = 'userId') %>% distinct(pawsId, eventLabel) %>% filter(!is.na(pawsId)) %>%
arrange(pawsId) %>% collect()
source('connection.R')
source('constants.R')
activity <- tbl(conDatasource, 'activity')
users <- tbl(conDatasource, 'student_user')
pageTable <- tbl(conDatasource, 'page')
syllabusLinks <- activity %>% filter(pagePath == '/schedule' & eventCategory == 'Outbound Link') %>%
left_join(users, by = 'userId') %>% distinct(pawsId, eventLabel) %>% filter(!is.na(pawsId)) %>%
arrange(pawsId) %>% collect()
View(syllabusLinks)
syllabusLinks %>% count(pawsId)
syllabusLinks %>% count(pawsId) %>% View()
syllabusLinks %>% count(eventLabel) %>% View()
syllabusLinks %>% count(eventLabel) %>% View()
scheduleLinks <- activity %>% filter(pagePath == '/schedule' & eventCategory == 'Outbound Link') %>%
left_join(users, by = 'userId') %>% distinct(pawsId, eventLabel) %>% filter(!is.na(pawsId)) %>%
arrange(pawsId) %>% collect()
remove(syllabusLinks)
View(scheduleLinks)
topicLinks %>% filter(pageCategory == 'is') %>% count(pagePath)
topicLinks %>% filter(pageCategory == 'is') %>% count(eventValue)
topicLinks %>% filter(pageCategory == 'is') %>% count(eventLabel)
topicLinks %>% filter(pageCategory == 'is') %>% count(eventLabel) %>% arrange(desc(n))
topicLinks %>% filter(pageCategory == 'is') %>% filter(topic == 'Software')
topicLinks %>% filter(pageCategory == 'is') %>% filter(topic == 'Software') %>% count(eventLabel)
topicLinks %>% filter(pageCategory == 'is') %>% filter(topic == 'Software') %>% count(eventLabel) %>% View()
head(users)
distinct(users, section)
library(tidyverse)
source('connection.R')
source('constants.R')
# import data
roster <- tbl(conDatasource, 'student_user')
activity <- tbl(conDatasource, 'activity')
